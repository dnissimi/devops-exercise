sudo: required

language: python

python:
# - 2.7
# - 3.5
  - 3.6

services:
  - docker

env: >
  # user-definable variables
  IMAGE_NAME=dnissimi/devops-exercise
  TEST_SERVICE_URL=http://127.0.0.1:8080/api/v1.0/about
  AWS_EB_REGION=eu-west-1
  AWS_EB_APP=devops-exercise
  AWS_EB_ENV=DevopsExercise-env
  AWS_EB_BUCKET_NAME=elasticbeanstalk-eu-west-1-487649374676
  #AWS_EB_ACCESS_KEY_ID=
  #AWS_EB_SECRET_ACCESS_KEY=
  

install:
  # install packages for testing environment 
  - pip install -r requirements/dev.txt

before_script:
  # get version info from Dockerfile
  - version="$(awk '$2 == "SERVICE_VERSION" { print $3; exit }' Dockerfile)"

script:
  # build Docker image and launch for unit test
  - docker build --no-cache -t "$IMAGE_NAME" .
  - docker run -d -p 8080:8080 "$IMAGE_NAME"

  #display some status info
  - docker images
  - docker ps
  - sleep 2

  # poor man's unit test
  - echo $TEST_SERVICE_URL
  - python test/test-http.py "$TEST_SERVICE_URL"

after_success:
  # push image to DockerHub
  - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
  - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:latest"
  - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${version}"
  - docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:${version}"

before_deploy:

deploy:
  provider: elasticbeanstalk
  access_key_id: "$AWS_EB_ACCESS_KEY_ID"
  secret_access_key: "$AWS_EB_SECRET_ACCESS_KEY"
  region: "$AWS_EB_REGION"  
  app: "$AWS_EB_APP"
  env: "$AWS_EB_ENV"
  bucket_name: "$AWS_EB_BUCKET_NAME"
  on:
    branch: master

