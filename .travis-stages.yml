sudo: required

language: python

python:
  - 3.6

services:
  - docker

env: >
  # user-definable variables
  IMAGE_NAME=dnissimi/devops-exercise
  TEST_SERVICE_URL=http://127.0.0.1:8080/api/v1.0/about
  AWS_EB_REGION=eu-west-1
  AWS_EB_APP=devops-exercise
  AWS_EB_ENV=DevopsExercise-env
  AWS_EB_BUCKET_NAME=elasticbeanstalk-eu-west-1-487649374676

branches:
  only:
  - master
  - develop

stages:
  - Setup
  - Build Docker Image
  - Test
  - name: Push Dev Build to DockerHub
    if: branch = develop
  - name: Release Master to DockerHub 
    if: branch = master
  - name: Deploy to AWS EB
    if: branch = master

jobs:
  include:
  - stage: Setup
    script:
      # install packages for testing environment 
      - pip install -r requirements/dev.txt
    
  - stage: Build Docker Image
    before_script:
      # get version info from Dockerfile
      - version="$(awk '$2 == "SERVICE_VERSION" { print $3; exit }' Dockerfile)"

    script:
      # build Docker image and launch for unit test
      - docker build --no-cache -t "$IMAGE_NAME" .
      - docker run -d -p 8080:8080 "$IMAGE_NAME"

      #display some status info
      - docker images
      - docker ps
      - sleep 2
  
  - stage: Test
    script: 
      - echo $TEST_SERVICE_URL
#      - curl "$TEST_SERVICE_URL"
      - python test/test-http.py "$TEST_SERVICE_URL"
  
  - stage: Push Dev Build to DockerHub
    script:
      # push image to DockerHub
      - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
      - git_sha="$(git rev-parse --short HEAD)"
      - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:develop"
      - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${git_sha}-develop"
      - docker push "${IMAGE_NAME}:develop" && docker push "${IMAGE_NAME}:${git_sha}-develop"

  - stage: Release to DockerHub
    script:
      # push image to DockerHub
      - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
      - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:latest"
      - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${version}"
      - docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:${version}"

  - stage: Deploy to AWS EB
    deploy:
      provider: elasticbeanstalk
      access_key_id: "$AWS_EB_ACCESS_KEY_ID"
      secret_access_key: "$AWS_EB_SECRET_ACCESS_KEY"
      region: "$AWS_EB_REGION"  
      app: "$AWS_EB_APP"
      env: "$AWS_EB_ENV"
      bucket_name: "$AWS_EB_BUCKET_NAME"
      on:
        branch: master


